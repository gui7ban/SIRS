//
// Protocol buffers definition for RemoteDocs server
//
syntax = "proto3";
package sirs.remotedocs.grpc;
import "google/protobuf/timestamp.proto";
message LoginRequest {
	string username = 1;
	string password = 2;
}

message LoginResponse {
	repeated DocumentInfo documents = 1;
	string token = 2;
    bytes salt = 3;
    bytes publicKey = 4;
    bytes privateKey = 5;
}

message DocumentInfo {
    int32 id = 1;
	string name = 2;
	int32 relationship = 3;
}

message DownloadRequest {
    int32 id = 1;
    string username = 2;
    string token = 3;
}

message DownloadResponse {
    bytes content = 1;
    bytes key = 2;
    string owner = 3;
    google.protobuf.Timestamp last_change = 4;
    string last_updater = 5;
    bytes iv = 6;
}

message UploadRequest {
    int32 id = 1;
    bytes content = 2;
    string username = 3;
    string token = 4;
}

message UploadResponse {

}

message UpdateFileNameRequest {
    int32 id = 1;
    string name = 2;
    string username = 3;
    string token = 4;
}

message UpdateFileNameResponse {

}

message CreateFileRequest {
    string name = 1;
    string username = 2;
    string token = 3;
    bytes fileKey = 4;
    bytes iv = 5;
}

message CreateFileResponse {
    int32 id = 1;
    google.protobuf.Timestamp creation_time = 2;
}

message RegisterRequest {
	string username = 1;
	string password = 2;
    bytes publicKey = 3; 
    bytes privateKey = 4;
    bytes salt = 5;

}

message RegisterResponse {
    string token = 1;
}

message PingRequest {
	// No arguments required
}
	
message PingResponse {
	string outputText = 1;
}

message GetDocumentsRequest{
    string token = 1;
    string username = 2;
}

message GetDocumentsResponse{
    repeated DocumentInfo documents = 1;
}

message DeleteFileRequest{
    int32 id = 1;
    string token = 2;
    string username = 3;
}

message DeleteFileResponse{

}

message LogoutRequest {
    string token = 1;
    string username = 2;
}

message LogoutResponse {
    
}

message SharedDocUsersRequest {
    string token = 1;
    string username = 2;
    int32 id = 3;
}

message SharedDocUsersResponse {
    repeated UserGrpc users = 1;
}

message UserGrpc {
    string username = 1;
    int32 permission = 2;
}

message UpdatePermissionUserRequest {
    string owner = 1;
    string token = 2;
    string username = 3;
    int32 permission = 4;
    int32 id = 5;

}

message UpdatePermissionUserResponse {

}

message AddPermissionUserRequest {
    string owner = 1;
    string token = 2;
    string username = 3;
    int32 permission = 4;
    int32 id = 5;
    bytes fileKey = 6;
    bytes iv = 7;
}

message AddPermissionUserResponse {
  
}

message DeletePermissionUserRequest {
    string owner = 1;
    string token = 2;
    string username = 3;
    int32 id = 4;
}

message DeletePermissionUserResponse {
  
}

message GetPublicKeyRequest {
    string owner = 1;
    string token = 2;
    string username = 3;
    int32 fileId = 4;
}

message GetPublicKeyResponse {
    bytes publicKey = 1;
    bytes fileKey = 2;
    bytes iv = 3;
}


service RemoteDocs {
	rpc Ping(PingRequest) returns (PingResponse);
	rpc Login(LoginRequest) returns (LoginResponse);
	rpc Register(RegisterRequest) returns (RegisterResponse);
	rpc Download(DownloadRequest) returns (DownloadResponse);
	rpc Upload(UploadRequest) returns (UploadResponse);
	rpc CreateFile(CreateFileRequest) returns (CreateFileResponse);
	rpc UpdateFileName(UpdateFileNameRequest) returns (UpdateFileNameResponse);
    rpc GetDocumentsList(GetDocumentsRequest) returns (GetDocumentsResponse);
    rpc DeleteFile(DeleteFileRequest) returns (DeleteFileResponse);
    rpc Logout(LogoutRequest) returns (LogoutResponse); 
    rpc DocUsersList(SharedDocUsersRequest) returns (SharedDocUsersResponse);
    rpc UpdatePermission(UpdatePermissionUserRequest) returns (UpdatePermissionUserResponse);
    rpc AddPermission(AddPermissionUserRequest) returns (AddPermissionUserResponse);
    rpc DeletePermission(DeletePermissionUserRequest) returns (DeletePermissionUserResponse);
    rpc GetPublicKey(GetPublicKeyRequest) returns (GetPublicKeyResponse);

}
